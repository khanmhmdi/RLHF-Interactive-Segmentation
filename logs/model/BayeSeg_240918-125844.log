24-09-18 12:58:44.712 - INFO: Namespace(lr=0.0003, weight_decay=0.0001, batch_size=32, epochs=1200, lr_drop=1000, num_classes=2, checkpoint_dir=None, model='BayeSeg', dataset_dir='/home/kasra/Desktop/New Folder/External PosEstimation Files/Processed_data_nii/', in_channels=1, ce_loss_coef=1, dice_loss_coef=0, bayes_loss_coef=100, output_dir='./logs/model', device='cuda', seed=42, resume='', start_epoch=0, num_workers=4, mu_0=0, sigma_0=1, phi_rho=1e-06, gamma_rho=2, phi_upsilon=1e-08, gamma_upsilon=2, phi_omega=0.0001, gamma_omega=2, alpha_pi=2, beta_pi=2)
24-09-18 12:58:45.161 - INFO: BayeSeg(
  (res_shape): ResNet_shape(
    (conv_first): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (body): Sequential(
      (0): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (1): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (2): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (3): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (4): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (5): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (6): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (7): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (8): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (9): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
    )
    (conv_last): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (lrelu): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (res_appear): ResNet_appearance(
    (conv_first): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (body): Sequential(
      (0): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): ResBlock(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (conv_last): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (lrelu): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (unet): EfficientUnet(
    (encoder): Encoder(
      (stem_conv): Conv2dSamePadding(3, 32, kernel_size=(3, 3), stride=(2, 2), bias=False)
      (stem_batch_norm): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
      (stem_swish): Swish()
      (blocks): ModuleList(
        (0): MBConvBlock(
          (swish): Swish()
          (_depthwise_conv): Conv2dSamePadding(32, 32, kernel_size=(3, 3), stride=(1, 1), groups=32, bias=False)
          (_bn1): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(32, 8, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(8, 32, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(16, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (1): MBConvBlock(
          (swish): Swish()
          (_depthwise_conv): Conv2dSamePadding(16, 16, kernel_size=(3, 3), stride=(1, 1), groups=16, bias=False)
          (_bn1): BatchNorm2d(16, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(16, 4, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(4, 16, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(16, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (2): MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(96, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(96, 96, kernel_size=(3, 3), stride=(2, 2), groups=96, bias=False)
          (_bn1): BatchNorm2d(96, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(96, 4, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(4, 96, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (3-4): 2 x MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(144, 144, kernel_size=(3, 3), stride=(1, 1), groups=144, bias=False)
          (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(144, 6, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(6, 144, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (5): MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(144, 144, kernel_size=(5, 5), stride=(2, 2), groups=144, bias=False)
          (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(144, 6, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(6, 144, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (6-7): 2 x MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(288, 288, kernel_size=(5, 5), stride=(1, 1), groups=288, bias=False)
          (_bn1): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(288, 12, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(12, 288, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (8): MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)
          (_bn1): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(288, 12, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(12, 288, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(288, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(88, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (9-11): 3 x MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(88, 528, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(528, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(528, 528, kernel_size=(3, 3), stride=(1, 1), groups=528, bias=False)
          (_bn1): BatchNorm2d(528, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(528, 22, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(22, 528, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(88, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (12): MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(88, 528, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(528, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(528, 528, kernel_size=(5, 5), stride=(1, 1), groups=528, bias=False)
          (_bn1): BatchNorm2d(528, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(528, 22, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(22, 528, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(528, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(120, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (13-15): 3 x MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(120, 720, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(720, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(720, 720, kernel_size=(5, 5), stride=(1, 1), groups=720, bias=False)
          (_bn1): BatchNorm2d(720, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(720, 30, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(30, 720, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(720, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(120, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (16): MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(120, 720, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(720, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(720, 720, kernel_size=(5, 5), stride=(2, 2), groups=720, bias=False)
          (_bn1): BatchNorm2d(720, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(720, 30, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(30, 720, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(720, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(208, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (17-20): 4 x MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(208, 1248, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(1248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(1248, 1248, kernel_size=(5, 5), stride=(1, 1), groups=1248, bias=False)
          (_bn1): BatchNorm2d(1248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(1248, 52, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(52, 1248, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(1248, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(208, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (21): MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(208, 1248, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(1248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(1248, 1248, kernel_size=(3, 3), stride=(1, 1), groups=1248, bias=False)
          (_bn1): BatchNorm2d(1248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(1248, 52, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(52, 1248, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(1248, 352, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(352, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
        (22): MBConvBlock(
          (swish): Swish()
          (_expand_conv): Conv2dSamePadding(352, 2112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(2112, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dSamePadding(2112, 2112, kernel_size=(3, 3), stride=(1, 1), groups=2112, bias=False)
          (_bn1): BatchNorm2d(2112, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dSamePadding(2112, 88, kernel_size=(1, 1), stride=(1, 1))
          (_se_expand): Conv2dSamePadding(88, 2112, kernel_size=(1, 1), stride=(1, 1))
          (_project_conv): Conv2dSamePadding(2112, 352, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(352, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
        )
      )
      (head_conv): Conv2dSamePadding(352, 1408, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (head_batch_norm): BatchNorm2d(1408, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
      (head_swish): Swish()
    )
    (up_conv1): ConvTranspose2d(1408, 512, kernel_size=(2, 2), stride=(2, 2))
    (double_conv1): Sequential(
      (0): Conv2d(600, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (up_conv2): ConvTranspose2d(512, 256, kernel_size=(2, 2), stride=(2, 2))
    (double_conv2): Sequential(
      (0): Conv2d(304, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (up_conv3): ConvTranspose2d(256, 128, kernel_size=(2, 2), stride=(2, 2))
    (double_conv3): Sequential(
      (0): Conv2d(152, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (up_conv4): ConvTranspose2d(128, 64, kernel_size=(2, 2), stride=(2, 2))
    (double_conv4): Sequential(
      (0): Conv2d(80, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (up_conv_input): ConvTranspose2d(64, 32, kernel_size=(2, 2), stride=(2, 2))
    (double_conv_input): Sequential(
      (0): Conv2d(35, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (final_conv): Conv2d(32, 4, kernel_size=(1, 1), stride=(1, 1))
  )
  (softmax): Softmax(dim=1)
)
24-09-18 12:58:45.175 - INFO: number of params:19313930
24-09-18 12:58:45.183 - INFO: Building training dataset...
